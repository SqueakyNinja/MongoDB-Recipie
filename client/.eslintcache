[{"C:\\Users\\Axel\\Desktop\\recept\\Recipe-app\\client\\src\\components\\OCR.tsx":"1","C:\\Users\\Axel\\Desktop\\recept\\Recipe-app\\client\\src\\index.tsx":"2","C:\\Users\\Axel\\Desktop\\recept\\Recipe-app\\client\\src\\App.tsx":"3","C:\\Users\\Axel\\Desktop\\recept\\Recipe-app\\client\\src\\pages\\AddOCRRecipe.tsx":"4","C:\\Users\\Axel\\Desktop\\recept\\Recipe-app\\client\\src\\components\\Navbar\\Navbar.js":"5","C:\\Users\\Axel\\Desktop\\recept\\Recipe-app\\client\\src\\components\\Navbar\\MenuItems.js":"6","C:\\Users\\Axel\\Desktop\\recept\\Recipe-app\\client\\src\\components\\Button.js":"7","C:\\Users\\Axel\\Desktop\\recept\\Recipe-app\\client\\src\\components\\Navbar\\NavTop.js":"8"},{"size":2747,"mtime":1612446804360,"results":"9","hashOfConfig":"10"},{"size":151,"mtime":1612446804363,"results":"11","hashOfConfig":"10"},{"size":660,"mtime":1612509386863,"results":"12","hashOfConfig":"10"},{"size":156,"mtime":1612446804365,"results":"13","hashOfConfig":"10"},{"size":1282,"mtime":1612511308661,"results":"14","hashOfConfig":"10"},{"size":690,"mtime":1612466844897,"results":"15","hashOfConfig":"10"},{"size":626,"mtime":1612463528214,"results":"16","hashOfConfig":"10"},{"size":142,"mtime":1612471324165,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"gc6yqj",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Axel\\Desktop\\recept\\Recipe-app\\client\\src\\components\\OCR.tsx",["37"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { createWorker } from \"tesseract.js\";\r\n\r\nconst OCR = () => {\r\n  const [ocr, setOcr] = useState(\"Recognizing...\");\r\n  const [file, setFile] = useState(require(\"./text.png\").default);\r\n  const worker = createWorker({\r\n    logger: (m) => console.log(m),\r\n  });\r\n  const doOCR = async () => {\r\n    await worker.load();\r\n    await worker.loadLanguage(\"eng\");\r\n    await worker.initialize(\"eng\");\r\n    const {\r\n      data: { text },\r\n    } = await worker.recognize(file);\r\n    setOcr(text);\r\n    let resultsarray1 = text.split(\"\\n\");\r\n    let filteredArray1 = resultsarray1.filter((x) => x !== \"\");\r\n    console.log(resultsarray1);\r\n    console.log(filteredArray1);\r\n\r\n    // for (let i = 0; i < text.length; i++) {\r\n    //   const element = text[i];\r\n    //   console.log(element);\r\n    // }\r\n    console.log(text);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let testArray = [\r\n      \"Ingredienser (kladdkaka):\",\r\n      \"225 g smor\",\r\n      \"3,5 dl strosocker\",\r\n      \"2,25 dL brunt farinsocker stro\",\r\n      \"1 msk vaniljsocker\",\r\n      \"4 stora agg\",\r\n      \"3,5 dl vetemjol\",\r\n      \"1 dl kakao\",\r\n      \"1 krm salt\",\r\n    ];\r\n    const regex = /[0-9,|.]+ (?<=[0-9]\\s)(?:\\w+)/;\r\n    for (let i = 0; i < testArray.length; i++) {\r\n      const element = testArray[i];\r\n      let newObjectKey = element.replace(regex, \"\").trim();\r\n      let newObjectValue = \"\";\r\n      // if (element.match(regex) !== null) {\r\n      //   newObjectValue = element.match(regex)[0];\r\n      // }\r\n\r\n      console.log(\"Key: \" + newObjectKey);\r\n      console.log(\"Value: \" + newObjectValue);\r\n      let newObject = { newObjectKey: newObjectValue };\r\n      console.log(newObject);\r\n      // return newObject;\r\n    }\r\n  }, []);\r\n\r\n  const uploadImage = (event: any) => {\r\n    const allowedFileTypes = [\"image/png\", \"image/jpeg\"];\r\n    if (allowedFileTypes.indexOf(event.target.files[0].type) > -1) {\r\n      setFile(URL.createObjectURL(event.target.files[0]));\r\n      console.log(\"rätt filtyp!\");\r\n    } else {\r\n      console.log(\"fel filtyp! eller något annat knas\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (file) {\r\n      console.log(\"changing file to read\");\r\n      setFile(file);\r\n    }\r\n  }, [file]);\r\n\r\n  return (\r\n    <>\r\n      <h2>Trying to read a file</h2>\r\n      <div>\r\n        <input\r\n          type=\"file\"\r\n          name=\"\"\r\n          id=\"fileUpload\"\r\n          onChange={(file) => {\r\n            uploadImage(file);\r\n          }}\r\n        />\r\n      </div>\r\n      <img\r\n        crossOrigin=\"anonymous\"\r\n        src={file}\r\n        alt=\"\"\r\n        style={{ width: \"500px\" }}\r\n      />\r\n      <button onClick={() => doOCR()}>Recognize text!</button>\r\n    </>\r\n  );\r\n};\r\nexport default OCR;\r\n",["38","39"],"C:\\Users\\Axel\\Desktop\\recept\\Recipe-app\\client\\src\\index.tsx",[],"C:\\Users\\Axel\\Desktop\\recept\\Recipe-app\\client\\src\\App.tsx",[],"C:\\Users\\Axel\\Desktop\\recept\\Recipe-app\\client\\src\\pages\\AddOCRRecipe.tsx",[],"C:\\Users\\Axel\\Desktop\\recept\\Recipe-app\\client\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\Axel\\Desktop\\recept\\Recipe-app\\client\\src\\components\\Navbar\\MenuItems.js",[],["40","41"],"C:\\Users\\Axel\\Desktop\\recept\\Recipe-app\\client\\src\\components\\Button.js",[],"C:\\Users\\Axel\\Desktop\\recept\\Recipe-app\\client\\src\\components\\Navbar\\NavTop.js",[],{"ruleId":"42","severity":1,"message":"43","line":6,"column":10,"nodeType":"44","messageId":"45","endLine":6,"endColumn":13},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},"@typescript-eslint/no-unused-vars","'ocr' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-global-assign","no-unsafe-negation"]